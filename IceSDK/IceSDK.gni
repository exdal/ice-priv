if (is_clang) {
    import("//build/toolchain/clang.gni")
}

template("IceSDK_Project") {
    if (!defined(invoker.assets)) {
        invoker.assets = [  ]
    }

    action("Assets_$target_name") {
        script = "//tools/compile_assets.py"
        args = [ host_os, rebase_path(root_build_dir), rebase_path(".", root_build_dir) ]

        inputs = invoker.assets

        outputs = [ "$target_out_dir/Assets/0.ice" ]
    }

    if (is_android) {
        shared_library(target_name) {
            forward_variables_from(invoker, "*")

            if (!defined(include_dirs)) {
                include_dirs = [ ]
            }

            if (!defined(defines)) {
                defines = [ ]
            }

            if (!defined(cflags_cc)) {
                cflags_cc = [ ]
            }

            if (!defined(deps)) {
                deps = [ ]
            }

            if (!defined(ldflags)) {
                ldflags = [ ]
            }

            if (!defined(libs)) {
                libs = [ ]
            }

            if (!defined(arflags)) {
                arflags = [ ]
            }

            include_dirs += [ "//IceSDK" ]

            if (is_android) {
                defines += [ "ICESDK_ANDROID", "__ANDROID__" ]
            }

            # FMOD
            defines += [ "ICESDK_FMOD" ]

            # BGFX
            include_dirs += [ "//third-party/bgfx/include", "//third-party/bimg/include", "//third-party/bx/include", "//third-party/glfw/include" ]

            exec_script("//tools/compile_assets.py", [ host_os, rebase_path(root_build_dir), rebase_path(".", root_build_dir) ])

            include_dirs += [
                "//third-party/fmod/inc",
                "//third-party/bgfx/include", "//third-party/bimg/include", "//third-party/bx/include",
                "//third-party/glfw/include", "//third-party/entt/single_include", "//third-party/glm", 
                "//third-party/imgui", "//third-party/sdl2/include",
                "//third-party/freetype/include"
            ]

            deps += [
                "//IceSDK:IceSDK",
            ]

            libs += [ "stdc++" ]

            #defines += [ "HAVE_PTHREAD" ]
            #libs += [ "pthread" ]
        }
    } else {
        orig_target_name = target_name

        executable(target_name) {
            forward_variables_from(invoker, "*")

            if (!defined(include_dirs)) {
                include_dirs = [ ]
            }

            if (!defined(defines)) {
                defines = [ ]
            }

            if (!defined(cflags_cc)) {
                cflags_cc = [ ]
            }

            if (!defined(deps)) {
                deps = [ ]
            }

            if (!defined(ldflags)) {
                ldflags = [ ]
            }

            if (!defined(arflags)) {
                arflags = [ ]
            }

            include_dirs += [ "//IceSDK" ]

            if (is_win) {
                defines += [ "ICESDK_WIN32" ]
            }

            if (is_linux) {
                defines += [ "ICESDK_LINUX" ]
            }

            if (is_mac) {
                defines += [ "ICESDK_OSX" ]
            }

            # FMOD
            defines += [ "ICESDK_FMOD" ]

            # BGFX
            include_dirs += [ "//third-party/bgfx/include", "//third-party/bimg/include", "//third-party/bx/include", "//third-party/glfw/include" ]

            if (is_win) {
                include_dirs += [ "//third-party/bx/include/compat/msvc" ]
            }

            if (is_mac) {
                include_dirs += [ "//third-party/bx/include/compat/osx" ]
            }

            include_dirs += [
                "//third-party/fmod/inc",
                "//third-party/bgfx/include", "//third-party/bimg/include", "//third-party/bx/include",
                "//third-party/glfw/include", "//third-party/entt/single_include", "//third-party/glm", 
                "//third-party/imgui", "//third-party/sdl2/include",
                "//third-party/freetype/include"
            ]

            deps += [
                "//IceSDK:IceSDK",
                ":Assets_$orig_target_name"           
            ]

           
            if (is_posix) {
                #defines += [ "HAVE_PTHREAD" ]
            }
        }
    }
}